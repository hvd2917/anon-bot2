import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ë–µ—Ä–µ–º–æ —Ç–æ–∫–µ–Ω –∑ Replit Secrets
API_TOKEN = os.getenv("API_TOKEN")
if not API_TOKEN:
    raise ValueError("–í–∫–∞–∂–∏ API_TOKEN —É Secrets Replit")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot=bot)

# —Å–ª–æ–≤–Ω–∏–∫–∏ –¥–ª—è –Ω—ñ–∫—ñ–≤ —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_nicks = {}         # user_id -> nick
chat_members = set()    # –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, —è–∫—ñ –≤–∂–µ –≤–≤–µ–ª–∏ –Ω—ñ–∫
waiting_for_nick = set()  # –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, —è–∫—ñ –∑–∞—Ä–∞–∑ –≤–≤–æ–¥—è—Ç—å –Ω—ñ–∫

# –∫–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    user_id = message.from_user.id
    waiting_for_nick.add(user_id)
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! üëã –í–≤–µ–¥–∏ —Å–≤—ñ–π –Ω—ñ–∫ –¥–ª—è –∞–Ω–æ–Ω—ñ–º–Ω–æ–≥–æ —á–∞—Ç—É:")

# –∫–æ–º–∞–Ω–¥–∞ /nick ‚Äî –∑–º—ñ–Ω–∞ –Ω—ñ–∫—É
@dp.message(Command("nick"))
async def change_nick_cmd(message: types.Message):
    user_id = message.from_user.id
    waiting_for_nick.add(user_id)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏ –Ω–æ–≤–∏–π –Ω—ñ–∫, —è–∫–∏–π —Ö–æ—á–µ—à –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏:")

# –æ–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text.strip()

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —á–µ–∫–∞—î –Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω—ñ–∫—É
    if user_id in waiting_for_nick:
        nick = text
        user_nicks[user_id] = nick
        chat_members.add(user_id)
        waiting_for_nick.remove(user_id)
        await message.answer(f"‚úÖ –¢–≤—ñ–π –Ω—ñ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {nick}\n–¢–µ–ø–µ—Ä –º–æ–∂–µ—à –ø–∏—Å–∞—Ç–∏ —É —á–∞—Ç!")
        return

    # Relay –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—Å—ñ–º —ñ–Ω—à–∏–º
    if user_id in chat_members:
        nick = user_nicks[user_id]
        for uid in chat_members:
            if uid != user_id:
                try:
                    await bot.send_message(uid, f"**{nick}:** {text}", parse_mode="Markdown")
                except:
                    pass
