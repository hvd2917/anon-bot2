
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

API_TOKEN = "8434961706:AAGl85iuVzvIxFdtP8cyB3tvFJ40Nwr9SyI"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# —Å–ª–æ–≤–Ω–∏–∫–∏ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω—ñ–∫—ñ–≤ —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_nicks = {}   # user_id -> nick
chat_members = set()

# –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç—É
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! üëã –í–≤–µ–¥–∏ —Å–≤—ñ–π –Ω—ñ–∫ –¥–ª—è –∞–Ω–æ–Ω—ñ–º–Ω–æ–≥–æ —á–∞—Ç—É:"
    )

# –ø–µ—Ä—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –Ω—ñ–∫–æ–º
@dp.message(lambda msg: msg.from_user.id not in user_nicks)
async def set_nick(message: types.Message):
    nick = message.text.strip()
    user_nicks[message.from_user.id] = nick
    chat_members.add(message.from_user.id)
    await message.answer(f"‚úÖ –¢–≤—ñ–π –Ω—ñ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {nick}\n–¢–µ–ø–µ—Ä –º–æ–∂–µ—à –ø–∏—Å–∞—Ç–∏ —É —á–∞—Ç!")

# –æ–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@dp.message()
async def relay_message(message: types.Message):
    sender_id = message.from_user.id
    nick = user_nicks.get(sender_id, "–ê–Ω–æ–Ω—ñ–º")

    text = message.text

    # —Ä–æ–∑—Å–∏–ª–∞—î–º–æ –≤—Å—ñ–º, –∫—Ä—ñ–º –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
    for uid in chat_members:
        if uid != sender_id:
            try:
                await bot.send_message(uid, f"**{nick}:** {text}", parse_mode="Markdown")
            except:
                pass

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
